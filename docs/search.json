[
  {
    "objectID": "HW5_DKorver.html",
    "href": "HW5_DKorver.html",
    "title": "ST558 Homework 5",
    "section": "",
    "text": "We are using data from the UCI machine learning repository. The data is about secondary education in two Portuguese schools. First, I used the code they provided with the download to read in the data from a local file source and combine the two data frames.\n\n#Using the code given from the download package\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nThen I read in and combined the data using functions from the tidyverse. I used inner_join() on the variables they used in their code.\n\nd3=inner_join(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(d1, d2, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nI then used an inner_join() on all variables other than G1, G2, G3, paid, and absences. I used this dataframe of the combined data in further exercises.\n\n#G1, G2, G3, paid, absences\nd1_selected &lt;- d1 %&gt;% select(-G1, -G2, -G3, -paid, -absences)\nd2_selected &lt;- d2 %&gt;% select(-G1, -G2, -G3, -paid, -absences)\nd3_selected=inner_join(d1_selected,d2_selected,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(d1_selected, d2_selected, by = c(\"school\", \"sex\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nI then converted four categorical variables into factors: Medu (mother’s education), Fedu (father’s education), sex, and famsize (family size).\n\nd3_selected &lt;- d3_selected |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))\n\nmath &lt;- math |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))\n\nportuguese &lt;- portuguese |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))"
  },
  {
    "objectID": "HW5_DKorver.html#task-1-read-in-the-data-and-modify",
    "href": "HW5_DKorver.html#task-1-read-in-the-data-and-modify",
    "title": "ST558 Homework 5",
    "section": "",
    "text": "We are using data from the UCI machine learning repository. The data is about secondary education in two Portuguese schools. First, I used the code they provided with the download to read in the data from a local file source and combine the two data frames.\n\n#Using the code given from the download package\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nThen I read in and combined the data using functions from the tidyverse. I used inner_join() on the variables they used in their code.\n\nd3=inner_join(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(d1, d2, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nI then used an inner_join() on all variables other than G1, G2, G3, paid, and absences. I used this dataframe of the combined data in further exercises.\n\n#G1, G2, G3, paid, absences\nd1_selected &lt;- d1 %&gt;% select(-G1, -G2, -G3, -paid, -absences)\nd2_selected &lt;- d2 %&gt;% select(-G1, -G2, -G3, -paid, -absences)\nd3_selected=inner_join(d1_selected,d2_selected,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(d1_selected, d2_selected, by = c(\"school\", \"sex\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nI then converted four categorical variables into factors: Medu (mother’s education), Fedu (father’s education), sex, and famsize (family size).\n\nd3_selected &lt;- d3_selected |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))\n\nmath &lt;- math |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))\n\nportuguese &lt;- portuguese |&gt;\n  mutate(SexF = factor(sex, levels = c(\"F\", \"M\"), labels = c(\"Female\", \"Male\")),\n         MeduF = as.factor(Medu),\n         FeduF = as.factor(Fedu),\n         famsizeF = as.factor(famsize))"
  },
  {
    "objectID": "HW5_DKorver.html#task-2-summarize-the-data-very-basic-eda",
    "href": "HW5_DKorver.html#task-2-summarize-the-data-very-basic-eda",
    "title": "ST558 Homework 5",
    "section": "Task 2: Summarize the Data (Very basic EDA)",
    "text": "Task 2: Summarize the Data (Very basic EDA)\nI then looked at how the data is stored and looking at missing values.The documentation says there are no missing values in the data.\n\nclass(d3_selected)\n\n[1] \"data.frame\"\n\ntypeof(d3_selected)\n\n[1] \"list\"\n\nsum_na &lt;- function(column){\n  sum(is.na(column))\n}\n\nna_counts &lt;- d3_selected |&gt;\n  summarize(across(everything(), sum_na))\nna_counts\n\n  school sex age address famsize Pstatus Medu Fedu Mjob Fjob reason guardian.x\n1      0   0   0       0       0       0    0    0    0    0      0          0\n  traveltime.x studytime.x failures.x schoolsup.x famsup.x activities.x nursery\n1            0           0          0           0        0            0       0\n  higher.x internet romantic.x famrel.x freetime.x goout.x Dalc.x Walc.x\n1        0        0          0        0          0       0      0      0\n  health.x guardian.y traveltime.y studytime.y failures.y schoolsup.y famsup.y\n1        0          0            0           0          0           0        0\n  activities.y higher.y romantic.y famrel.y freetime.y goout.y Dalc.y Walc.y\n1            0        0          0        0          0       0      0      0\n  health.y SexF MeduF FeduF famsizeF\n1        0    0     0     0        0\n\n\n\nCategorical variables\n\n#one way\ntable(d3_selected$sex)\n\n\n  F   M \n198 184 \n\n#two way\ntable(d3_selected$sex,d3_selected$famsize)\n\n   \n    GT3 LE3\n  F 152  46\n  M 126  58\n\n#three way\ntable(d3_selected$sex,d3_selected$famsize,d3_selected$famsize)\n\n, ,  = GT3\n\n   \n    GT3 LE3\n  F 152   0\n  M 126   0\n\n, ,  = LE3\n\n   \n    GT3 LE3\n  F   0  46\n  M   0  58\n\n\n\n\nNumeric variables\nThe numeric variables are age, absences, and the three test grades variables (G1, G2, and G3) from each data set (math and Portuguese). Lets first take a look at the measures of center and spread for the numeric variables from the math and Portuguese data.\n\nmath_stats &lt;- math |&gt;\n  select(age,absences,G1,G2,G3) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\nmath_stats\n\n  mean_age median_age   sd_age iqr_age mean_absences median_absences\n1  16.6962         17 1.276043       2      5.708861               4\n  sd_absences iqr_absences  mean_G1 median_G1    sd_G1 iqr_G1  mean_G2\n1    8.003096            8 10.90886        11 3.319195      5 10.71392\n  median_G2    sd_G2 iqr_G2  mean_G3 median_G3    sd_G3 iqr_G3\n1        11 3.761505      4 10.41519        11 4.581443      6\n\nportuguese_stats &lt;- portuguese |&gt;\n  select(age,absences,G1,G2,G3) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\nportuguese_stats\n\n  mean_age median_age   sd_age iqr_age mean_absences median_absences\n1 16.74422         17 1.218138       2      3.659476               2\n  sd_absences iqr_absences  mean_G1 median_G1    sd_G1 iqr_G1  mean_G2\n1    4.640759            6 11.39908        11 2.745265      3 11.57011\n  median_G2    sd_G2 iqr_G2  mean_G3 median_G3    sd_G3 iqr_G3\n1        11 2.913639      3 11.90601        12 3.230656      4\n\n\nI then looked at the measures of center and spread for the numeric variables from the math and Portuguese data grouped by sex and then grouped by sex and studytime.\n\nmath_stats_by_sex &lt;- math |&gt;\n  select(sex,age,absences,G1,G2,G3) |&gt;\n  group_by(sex) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\nmath_stats_by_sex\n\n# A tibble: 2 × 21\n  sex   mean_age median_age sd_age iqr_age mean_absences median_absences\n  &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1 F         16.7         17   1.20       2          6.22               4\n2 M         16.7         16   1.36       2          5.14               4\n# ℹ 14 more variables: sd_absences &lt;dbl&gt;, iqr_absences &lt;dbl&gt;, mean_G1 &lt;dbl&gt;,\n#   median_G1 &lt;dbl&gt;, sd_G1 &lt;dbl&gt;, iqr_G1 &lt;dbl&gt;, mean_G2 &lt;dbl&gt;, median_G2 &lt;dbl&gt;,\n#   sd_G2 &lt;dbl&gt;, iqr_G2 &lt;dbl&gt;, mean_G3 &lt;dbl&gt;, median_G3 &lt;dbl&gt;, sd_G3 &lt;dbl&gt;,\n#   iqr_G3 &lt;dbl&gt;\n\nmath_stats_by_sex_study &lt;- math |&gt;\n  select(sex,age,absences,G1,G2,G3,studytime) |&gt;\n  group_by(sex,studytime) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\nmath_stats_by_sex_study\n\n# A tibble: 8 × 22\n# Groups:   sex [2]\n  sex   studytime mean_age median_age sd_age iqr_age mean_absences\n  &lt;chr&gt;     &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 F             1     16.3       16    0.984    1.5           6.96\n2 F             2     16.7       17    1.18     2             6.96\n3 F             3     17.0       17    1.28     2             4.76\n4 F             4     16.8       17    1.30     2             4.47\n5 M             1     16.8       16.5  1.45     2             5.35\n6 M             2     16.7       17    1.27     2             5.38\n7 M             3     16.8       17    1.31     2             3.71\n8 M             4     15.5       15    0.972    0.75          3.6 \n# ℹ 15 more variables: median_absences &lt;dbl&gt;, sd_absences &lt;dbl&gt;,\n#   iqr_absences &lt;dbl&gt;, mean_G1 &lt;dbl&gt;, median_G1 &lt;dbl&gt;, sd_G1 &lt;dbl&gt;,\n#   iqr_G1 &lt;dbl&gt;, mean_G2 &lt;dbl&gt;, median_G2 &lt;dbl&gt;, sd_G2 &lt;dbl&gt;, iqr_G2 &lt;dbl&gt;,\n#   mean_G3 &lt;dbl&gt;, median_G3 &lt;dbl&gt;, sd_G3 &lt;dbl&gt;, iqr_G3 &lt;dbl&gt;\n\nportuguese_stats_by_sex &lt;- portuguese |&gt;\n  select(sex,age,absences,G1,G2,G3) |&gt;\n  group_by(sex) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\nportuguese_stats_by_sex\n\n# A tibble: 2 × 21\n  sex   mean_age median_age sd_age iqr_age mean_absences median_absences\n  &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1 F         16.8         17   1.18       2          3.58               2\n2 M         16.7         17   1.28       2          3.78               2\n# ℹ 14 more variables: sd_absences &lt;dbl&gt;, iqr_absences &lt;dbl&gt;, mean_G1 &lt;dbl&gt;,\n#   median_G1 &lt;dbl&gt;, sd_G1 &lt;dbl&gt;, iqr_G1 &lt;dbl&gt;, mean_G2 &lt;dbl&gt;, median_G2 &lt;dbl&gt;,\n#   sd_G2 &lt;dbl&gt;, iqr_G2 &lt;dbl&gt;, mean_G3 &lt;dbl&gt;, median_G3 &lt;dbl&gt;, sd_G3 &lt;dbl&gt;,\n#   iqr_G3 &lt;dbl&gt;\n\nportuguese_stats_by_sex_study &lt;- portuguese |&gt;\n  select(sex,age,absences,G1,G2,G3,studytime) |&gt;\n  group_by(sex,studytime) |&gt;\n  summarize(across(where(is.numeric), \n                   list(\"mean\" = ~ mean(.x, na.rm = TRUE), \n                        \"median\" = ~ median(.x, na.rm = TRUE),\n                        \"sd\" = ~sd(.x, na.rm = TRUE),\n                        \"iqr\" = ~IQR(.x, na.rm = TRUE)), \n                   .names = \"{.fn}_{.col}\"))\n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\nportuguese_stats_by_sex_study\n\n# A tibble: 8 × 22\n# Groups:   sex [2]\n  sex   studytime mean_age median_age sd_age iqr_age mean_absences\n  &lt;chr&gt;     &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 F             1     16.6       17     1.16    1             4.06\n2 F             2     16.8       17     1.15    2             3.61\n3 F             3     16.9       17     1.25    2             3.07\n4 F             4     16.7       17     1.20    2             3.10\n5 M             1     16.8       17     1.30    2             4.54\n6 M             2     16.6       17     1.25    1.5           3.59\n7 M             3     16.8       16.5   1.19    2             1.09\n8 M             4     15.9       15     1.17    1.75          2.71\n# ℹ 15 more variables: median_absences &lt;dbl&gt;, sd_absences &lt;dbl&gt;,\n#   iqr_absences &lt;dbl&gt;, mean_G1 &lt;dbl&gt;, median_G1 &lt;dbl&gt;, sd_G1 &lt;dbl&gt;,\n#   iqr_G1 &lt;dbl&gt;, mean_G2 &lt;dbl&gt;, median_G2 &lt;dbl&gt;, sd_G2 &lt;dbl&gt;, iqr_G2 &lt;dbl&gt;,\n#   mean_G3 &lt;dbl&gt;, median_G3 &lt;dbl&gt;, sd_G3 &lt;dbl&gt;, iqr_G3 &lt;dbl&gt;\n\n\nI then looked at the correlation matrix for both datasets of the numeric variables.\n\nctab_math &lt;- math |&gt;\n  select(age,absences,G1,G2,G3) |&gt;\n  cor()\nas_tibble(ctab_math)\n\n# A tibble: 5 × 5\n      age absences      G1      G2      G3\n    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1  1        0.175  -0.0641 -0.143  -0.162 \n2  0.175    1      -0.0310 -0.0318  0.0342\n3 -0.0641  -0.0310  1       0.852   0.801 \n4 -0.143   -0.0318  0.852   1       0.905 \n5 -0.162    0.0342  0.801   0.905   1     \n\nctab_portuguese &lt;- portuguese |&gt;\n  select(age,absences,G1,G2,G3) |&gt;\n  cor()\nas_tibble(ctab_math)\n\n# A tibble: 5 × 5\n      age absences      G1      G2      G3\n    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1  1        0.175  -0.0641 -0.143  -0.162 \n2  0.175    1      -0.0310 -0.0318  0.0342\n3 -0.0641  -0.0310  1       0.852   0.801 \n4 -0.143   -0.0318  0.852   1       0.905 \n5 -0.162    0.0342  0.801   0.905   1     \n\n\nI then created a histogram, kernel density plot, and boxplot for both datasets.\n\nggplot(math, aes(x=age, fill=sex)) +\n  geom_histogram(binwidth=.5, alpha=.5, position=\"dodge\")\n\n\n\n\n\n\n\nggplot(math, aes(x=age, colour=sex)) + geom_density()\n\n\n\n\n\n\n\nggplot(math, aes(x=G3, y=absences, fill=sex)) + geom_boxplot()\n\n\n\n\n\n\n\nggplot(portuguese, aes(x=age, fill=sex)) +\n  geom_histogram(binwidth=.5, alpha=.5, position=\"dodge\")\n\n\n\n\n\n\n\nggplot(portuguese, aes(x=age, colour=sex)) + geom_density()\n\n\n\n\n\n\n\nggplot(portuguese, aes(x=G3, y=absences, fill=sex)) + geom_boxplot()\n\n\n\n\n\n\n\n\nI then created two scatterplots relating the G3 with absences by sex.\n\nggplot(math, aes(x=absences, y=G3, colour = sex)) +\n  geom_point(shape=1,position=position_jitter(width=1,height=.5))\n\n\n\n\n\n\n\nggplot(portuguese, aes(x=absences, y=G3, colour = sex)) +\n  geom_point(shape=1,position=position_jitter(width=1,height=.5))"
  }
]